( Math Extensions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )

chain: math'
{{
  : closer ( sg-sgn ) 2over / over - 2 / ;
  : loop   ( sg-sr  ) repeat closer 0; + again ;
---reveal---
  : squareRoot ( s-r ) 1 loop nip ;
}}

: gcd ( ab-n ) [ tuck mod dup ] while drop ;
: lcm ( ab-n ) 2over gcd &* dip / ;
: divisor? ( ab-f ) mod 0 = ;
: */  ( abc-d )  &* dip / ;
: even?  ( n-f )  2 mod 0 =  ;
: odd?   ( n-f )  2 mod 0 <> ;

: pow  ( bp-n ) 1 swap [ over * ] times nip ;
: abs  (  n-n ) dup 0 < &negate ifTrue ;
: min  ( ab-c ) 2over < &drop &nip  if ;
: max  ( ab-c ) 2over < &nip  &drop if ;
{{
  variables| w z |
  : seeds?   ( -  ) @w @z and ;
  : seed     ( -  ) time [ 62903 and !w ] [ 78578 and !z ] bi ;
  : ?seed    ( -  ) repeat seeds? 0 <> if; seed again ;
  : (random) ( -x )
    36969 z @ 65535 and * @z 16 >> + !z
    18000 w @ 65535 and * @w 16 >> + !w
    @z 16 << @w + ;
---reveal---
  : random     (  -x ) ?seed (random) abs ;
}}

;chain

doc{
=====
math'
=====
This library provides support for additional mathmatic operations not provided
by the core Retro language.


---------
Functions
---------
+------------+-------+-----------------------------------------------------+
| Function   | Stack | Description                                         |
+============+=======+=====================================================+
| squareRoot | x-n   | Find an (approximate) square root for a given value |
+------------+-------+-----------------------------------------------------+
| gcd        | xy-n  | Find the greatest common denominator for two values |
+------------+-------+-----------------------------------------------------+
| lcm        | xy-n  | Find the least common multiplier for two values     |
+------------+-------+-----------------------------------------------------+
| divisor?   | ab-f  | Tests to see if b is a divisor of a. Returns a flag.|
+------------+-------+-----------------------------------------------------+
| ``*/``     | abc-d | Multiply a by b, then divide bye c to get d         |
+------------+-------+-----------------------------------------------------+
| even?      | n-f   | Returns a flag indicating whether or not a number is|
|            |       | true                                                |
+------------+-------+-----------------------------------------------------+
| odd?       | n-f   | Returns a flag indicating whether or not a number is|
|            |       | false                                               |
+------------+-------+-----------------------------------------------------+
| pow        | bp-n  |  Raise (b) to power (p)                             |
+------------+-------+-----------------------------------------------------+
| abs        |  n-n  |  Absoulte value of number (n)                       |
+------------+-------+-----------------------------------------------------+
| min        | ab-c  |  Minimum of (a) or (b)                              |
+------------+-------+-----------------------------------------------------+
| max        | ab-c  |  Maximum of (a) or (b)                              |
+------------+-------+-----------------------------------------------------+
| random     |   -x  |  Return a random number                             |
+------------+-------+-----------------------------------------------------+

}doc

