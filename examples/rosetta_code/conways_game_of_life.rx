create world
  20 20 * allot
 
create next
  20 20 * allot
 
create initial
(       0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19 )
(  0 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  1 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 , 1 , 0 ,
(  2 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 , 1 , 0 ,
(  3 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ,
(  4 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  5 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  6 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  7 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  8 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
(  9 )  0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 10 )  0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 11 )  0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 12 )  0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 13 )  0 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 14 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 ,
( 15 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 ,
( 16 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 0 ,
( 17 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 0 ,
( 18 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
( 19 )  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
 
( Assumes anything outside the bounds is "dead" )
{{
  variable surrounding
  : get   ( rc- )
    2over [ 0 19 within ] bi@ and
    [ world + [ 20 * ] dip + @ ] [ 2drop 0 ] if ;
  : neighbor?  ( rc- )  get +surrounding ;
  : NW  ( rc-rc )  2over [ 1- ] bi@     neighbor? ;
  : NN  ( rc-rc )  2over [ 1- ] dip     neighbor? ;
  : NE  ( rc-rc )  2over [ 1- ] dip 1+  neighbor? ;
  : WW  ( rc-rc )  2over 1-             neighbor? ;
  : EE  ( rc-rc )  2over 1+             neighbor? ;
  : SW  ( rc-rc )  2over [ 1+ ] dip 1-  neighbor? ;
  : SS  ( rc-rc )  2over [ 1+ ] dip     neighbor? ;
  : SE  ( rc-rc )  2over [ 1+ ] bi@     neighbor? ;
  : count    ( rc-rcn )
    0 !surrounding
    NW NN NE
    WW    EE
    SW SS SE @surrounding ;
  : alive  ( rc-n )
    count
    [ 0 1 within ] [ drop 0 ] when
    [ 4 8 within ] [ drop 0 ] when
    [ 2 3 within ] [ drop 1 ] when ;
  : dead   ( rc-n )
    count
    [ 3 =        ] [ drop 1 ] when
    [ 0 2 within ] [ drop 0 ] when
    [ 4 8 within ] [ drop 0 ] when ;
  : newState  ( rc-n )
    2over get 1 = [ alive ] [ dead ] if ;
  : set   ( nrc- )  next + [ 20 * ] dip + ! ;
  : cols  ( r- )
    20 [ over swap newState 2rot set ] iter drop ;
  : output  ( n- )  [ 'o ] [ '. ] if putc space ;
---reveal---
  : display  ( - )
    cr world 20 [ 20 [ @+ output ] times cr ] times drop ;
  : start    ( - )
    initial world 20 20 * copy display ;
  : gen      ( - )
    20 [ cols ] iter  next world 20 20 * copy ;
  : delay  ( - )  time 1+ [ time over <= ] while drop ;
  : run    ( n- )
    [ delay clear gen display ] times ;
}}
 
start 20 run
